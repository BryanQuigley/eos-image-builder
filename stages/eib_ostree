#!/bin/bash -ex
# -*- mode: Shell-script; sh-basic-offset: 2; indent-tabs-mode: nil -*-
. "${EIB_BASELIB}"

# Use a normal bare repo to speed up later deployment
if [ ! -f "${EIB_OSTREE_REPODIR}"/config ]; then
  mkdir -p "${EIB_OSTREE_REPODIR}"
  ostree --repo="${EIB_OSTREE_REPODIR}" init
fi

# Prune the builder's ostree to keep the local repo from growing
# unbounded. Only the latest commit on each ref is needed to minimize
# the pull size.
ostree --repo="${EIB_OSTREE_REPODIR}" prune --refs-only --depth=0

# Optionally use the production ostree repo rather than staging.
if [ "${EIB_USE_PRODUCTION_OSTREE}" = true ]; then
  BUILD_OSTREE_URL="${EIB_OSTREE_URL}"
else
  BUILD_OSTREE_URL="${EIB_OSTREE_INT_URL}"
fi

# Pull in the latest commit. Recreate the remote setup to ensure there
# aren't any stale settings.
ostree --repo="${EIB_OSTREE_REPODIR}" remote delete --if-exists \
  ${EIB_OSTREE_REMOTE}
ostree --repo="${EIB_OSTREE_REPODIR}" remote add \
  --set=gpg-verify-summary=true \
  ${EIB_OSTREE_REMOTE} ${BUILD_OSTREE_URL} ${EIB_OSTREE_BRANCH}
eib_retry ostree --repo="${EIB_OSTREE_REPODIR}" pull \
  ${EIB_OSTREE_REMOTE} ${EIB_OSTREE_BRANCH}

# Recreate the ref locally so that the deploy can pull from it
ostree --repo="${EIB_OSTREE_REPODIR}" refs --delete ${EIB_OSTREE_BRANCH}
ostree --repo="${EIB_OSTREE_REPODIR}" refs --create=${EIB_OSTREE_BRANCH} \
  ${EIB_OSTREE_REMOTE}:${EIB_OSTREE_BRANCH}

# Update the major version branch if necessary. This will be used in the
# deployment instead of the minor version branch.
if [ "${EIB_OSTREE_BRANCH_DEPLOY}" != "${EIB_OSTREE_BRANCH}" ]; then
  ostree_write_refs "${EIB_OSTREE_REPODIR}" ${EIB_OSTREE_BRANCH} \
    ${EIB_OSTREE_BRANCH_DEPLOY}
fi

# Regenerate the summary file locally since pull --mirror will copy in
# the upstream summary file, which is inaccurate since only one ref was
# pulled and another ref was created locally.
ostree --repo="${EIB_OSTREE_REPODIR}" summary -u
