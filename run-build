#!/bin/bash -ex
export EOB_SRC=$(dirname $(readlink -f $0))
export EOB_SYSCONF=/etc/image-utils
export EOB_BASELIB="${EOB_SRC}"/lib/eob.sh
export PATH=$EOB_SRC/stages:$PATH
export PYTHONPATH=$EOB_SRC/lib

export LANG=C
unset LANGUAGE LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
unset LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION
unset LC_ALL
export DEBIAN_FRONTEND=noninteractive
export DEBCONF_NONINTERACTIVE_SEEN=true
export DEBIAN_PRIORITY=critical

# Make sure ERR traps follow through to shell functions
set -E

args=$(getopt -o "p:P:n" -l "product:,platform:,personalities:,dry-run" \
  -n "endless-os-builder" -- "$@")
eval set -- "${args}"

while true; do
  case "$1" in
    -p|--product)
      EOB_PRODUCT=$2
      shift 2
      ;;
    --platform)
      EOB_PLATFORM=$2
      shift 2
      ;;
    -P|--personalities)
      EOB_PERSONALITIES=$2
      shift 2
      ;;
    -n|--dry-run)
      export EOB_DRY_RUN=true
      shift
      ;;
    --)
      shift
      break
      ;;
  esac
done

# Some configuration defaults
# Debian package repository from where OS packages will be obtained
export EOB_OBS_REPO=http://obs-master.endlessm-sf.com:82/shared/eos

export EOB_BRANCH=${1:-master}
export EOB_PRODUCT=${EOB_PRODUCT:-eos}

# GPG private key ID to sign ostree commit. The key with this ID must be
# available in ${EOB_SYSCONF}/gnupg
# EOSK1 key expiring 2019-05-13.
EOB_OSTREE_KEYID=BA02FC46
export EOB_OSTREE_KEYID

export EOB_IMAGE_SIGNING_KEYID=587A279C

case "$(uname -m)" in
  x86_64|i?86)
    export EOB_ARCH=i386
    export EOB_PLATFORM=${EOB_PLATFORM:-i386}
    ;;

  arm*)
    export EOB_ARCH=armhf
    export EOB_PLATFORM=${EOB_PLATFORM:-odroidu2}
    ;;
esac

# Set personalities to build if they haven't been requested. Detect when
# the variable is set but empty with -v. This allows no personality
# builds to be selected.
if [ -z "${EOB_PERSONALITIES}" ]; then
  export EOB_PERSONALITIES=base
  case "${EOB_PRODUCT}" in
    eos)
      case "${EOB_ARCH}" in
        i386)
          EOB_PERSONALITIES="$EOB_PERSONALITIES en es es_GT pt_BR"
          ;;
        armhf)
          EOB_PERSONALITIES="$EOB_PERSONALITIES es_GT"
          ;;
      esac
      ;;
  esac
fi

# Create 2 disk split images for eos.
if [[ "${EOB_PRODUCT}" == eos ]]; then
  EOB_SPLIT_IMAGES=true
else
  EOB_SPLIT_IMAGES=false
fi
export EOB_SPLIT_IMAGES

export EOB_BUILD_VERSION=$(date +%y%m%d-%H%M%S)
export EOB_OSTREE_BRANCH=${EOB_BRANCH}/${EOB_PLATFORM}

# Multiple stable minor version branches may be in use, but the deployed
# ostree configuration should use only the major version. E.g., the real
# branch may be eos2.2, but the deployed configuration should use eos2.
export EOB_OSTREE_BRANCH_DEPLOY=${EOB_BRANCH%.*}/${EOB_PLATFORM}

# The ostree URL that the final system will query for updates. Not used
# during build time. The product (e.g. eos) and arch is taken as a
# subdirectory of this address.
export EOB_OSTREE_URL_ROOT="http://endless:***REMOVED***@ostree.endlessm.com"
if [[ "${EOB_BRANCH}" == "master" ]]; then
  export EOB_OSTREE_URL_BASE="${EOB_OSTREE_URL_ROOT}/staging/dev"
else
  export EOB_OSTREE_URL_BASE="${EOB_OSTREE_URL_ROOT}/ostree"
fi
export EOB_OSTREE_URL=${EOB_OSTREE_URL_BASE}/${EOB_PRODUCT}-${EOB_ARCH}

# Support adding a ref on an alternate branch. By default, no alternate
# is used.
export EOB_OSTREE_BRANCH_ALT=

# Image uploading
export EOB_IMAGE_HOST_SHORT=obs-repository
export EOB_IMAGE_HOST=${EOB_IMAGE_HOST_SHORT}.endlessm-sf.com
export EOB_IMAGE_USER=uploader
export EOB_IMAGE_PATH=/srv/images/www
export EOB_IMAGE_DEST=${EOB_IMAGE_PATH}/${EOB_PRODUCT}-${EOB_ARCH}-${EOB_PLATFORM}/${EOB_BRANCH}/${EOB_BUILD_VERSION}

# Image URLs
EOB_IMAGE_URL_ROOT="http://images.endlessm-sf.com/"
EOB_IMAGE_URL_BASE="${EOB_IMAGE_URL_ROOT}/${EOB_PRODUCT}-${EOB_ARCH}-${EOB_PLATFORM}/${EOB_BRANCH}/${EOB_BUILD_VERSION}"
export EOB_IMAGE_URL_ROOT EOB_IMAGE_URL_BASE

# Email settings
EOB_EMAIL_FROM=image-builder@endlessm.com
EOB_EMAIL_REPLYTO=endless-dev@endlessm.com
EOB_EMAIL_TO=endless-dev-status@endlessm.com
export EOB_EMAIL_FROM EOB_EMAIL_REPLYTO EOB_EMAIL_TO

# Jenkins triggering
EOB_JENKINS_URL="http://ci.endlessm-sf.com:8080"
EOB_JENKINS_USER=image-builder
EOB_JENKINS_TOKEN="${EOB_SYSCONF}"/jenkins-token
export EOB_JENKINS_URL EOB_JENKINS_USER EOB_JENKINS_TOKEN

# Read system config overrides
[[ -e "${EOB_SYSCONF}"/config ]] && . "${EOB_SYSCONF}"/config

# Read user config overrides
[[ -e "${EOB_SRC}"/config ]] && . "${EOB_SRC}"/config

. "${EOB_BASELIB}"

recreate_dir "${EOB_OUTDIR}"
recreate_dir "${EOB_TMPDIR}"
exec > >(tee $(eob_outfile build.txt))
exec 2>&1

mkdir -p "${EOB_CONTENT}"
. "${EOB_SRC}"/buildscript

# Unless this is a dry run, the output files have been published and can
# be deleted.
[ -n "${EOB_DRY_RUN}" ] || rm -rf "${EOB_OUTDIR}"
