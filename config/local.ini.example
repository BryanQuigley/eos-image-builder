# Example local configuration. When installed as local.ini, it can be
# used to override any other settings for the configured image variant.
# This is primarily useful when testing changes to the image builder or
# producing a one time custom image.
#
# Below are some settings that are typically useful in this case, but
# all options are available to be changed. See defaults.ini for
# descriptions of the options.

[check]
# Downloading the sample media requires SSH access to the
# content-storage.endlessm-sf.com server inside the VPN. Skip that since
# it's only needed on production images.
hooks_del_local = 50-media

[image]
# Skip GPG signing of the completed image files since the default key ID
# isn't available. Alternatively, the key ID for any private key in the
# GPG homedir at /etc/eos-image-builder/gnupg.
signing_keyid =

# 50-gnome-software-cache: see comment for corresponding [content] key below.
# 50-media: see comment in [check] section above.
hooks_del_local =
    50-gnome-software-cache
    50-media

# Most products don't generate split images, but it can be useful to do
# that locally for testing since the codepaths there are fragile.
#split = true

# Some products are compressed with xz, trading the one-time cost of
# substantially slower image builds for substantially smaller image
# files. When testing locally, you probably don't care how big the image
# file is, but you'd probably like it to build quickly.
compression = gz

# One may want to completely disable flatpaks for local builds to save storage
# and time. Also, disabling flatpak support may increase the changes of a
# successful build.
#[flatpak]
#enable = false

[flatpak-remote-eos-apps]
# Completely override the set of installed EOS apps for testing. This will
# take precedence over all other image variant configuration. This can
# be useful if the exact app set is known or if the build is for testing
# and the full multi-gigabyte app set is not needed.
apps =
  com.endlessm.resume

# Alternatively, a set of apps can be added or deleted from the existing
# configuration by using the _add_/_del_ merged settings. The above
# install option would need to be commented out for these to take
# effect.
#apps_add_local = org.my.App
#apps_del_local = com.endlessm.resume

# Testing for apps to be removed when creating the split disk. As with
# the install option, this overrides all settings but could use the
# _add_/_del_ merged options.
nosplit_apps = com.endlessm.resume

[flatpak-remote-flathub]
# Completely override the set of installed Flathub apps. See documentation
# for eos-apps above.
apps =
  com.endlessm.photos
nosplit_apps =

[content]
# 50-gnome-software-cache:
#   The gnome-software-data git repo is not publicly accessible, so an SSH key
#   is required to clone the repo. Alternatively, an SSH private key with
#   access to the git@github.com/endlessm/gnome-software-data.git repo can be
#   installed at /etc/eos-image-builder/ssh-key.pem and 50-gnome-software-cache
#   can be removed from all the _del_ lists in this file.
#
# 50-media: see comment in [check] section above.
hooks_del_local =
    50-gnome-software-cache
    50-media

[buildroot]
# The buildroot is generated using packages on the internal OBS repos,
# which requires VPN access. This is not implemented yet, but running
# builds outside the SF office would be better to use a public package
# mirror.
#repo = http://non-existent-mirror.endlessm.com/eos
