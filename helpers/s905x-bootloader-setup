#!/bin/bash
# Convert u-boot binary to signed bootloader for Amlogic S905 (gxl)
# Based on instructions in the u-boot libretech_cc platform README
# The output binary can be flashed to the media starting at sector 1.

set -e

# Based on amlogic vendor u-boot blx_fix.sh
blx_fix() {
	if [ "$4" = "bl30" ]; then
		declare blx_bin_limit=40960
		declare blx01_bin_limit=13312
	elif [ "$4" = "bl2" ]; then
		declare blx_bin_limit=41984
		declare blx01_bin_limit=7168
	else
		echo "blx_fix name flag not supported!"
		return 1
	fi

	# blx_size: blx.bin size, zero_size: fill with zeros
	declare -i blx_size=`du -b $1 | awk '{print int($1)}'`
	declare -i zero_size=$blx_bin_limit-$blx_size
	cp $1 $3
	dd if=/dev/zero bs=1 count=$zero_size >> $3

	declare -i blx01_size=`du -b $2 | awk '{print int($1)}'`
	declare -i zero_size_01=$blx01_bin_limit-$blx01_size
	cat $2 >> $3
	dd if=/dev/zero bs=1 count=$zero_size_01 >> $3

	return 0
}

if [[ $# -lt 3 ]]; then
	echo "Usage: $0 FIPDIR UBOOT_BIN_PATH OUTPUT_FILE_PATH"
	exit 1
fi

FIPDIR=$1
UBOOT=$2
OUTPUT=$3

cleanup() {
	[[ -n "${WORKDIR}" ]] && rm -rf "${WORKDIR}"
}
trap cleanup EXIT

WORKDIR=$(mktemp -d)

blx_fix \
	${FIPDIR}/bl30.bin ${FIPDIR}/bl301.bin \
	${WORKDIR}/bl30_new.bin \
	bl30

# acs_tool modifies the input file passed here
cp ${FIPDIR}/bl2.bin ${WORKDIR}
gxlimg_acs_tool ${WORKDIR}/bl2.bin ${WORKDIR}/bl2_acs.bin ${FIPDIR}/acs.bin 0

blx_fix \
	${WORKDIR}/bl2_acs.bin \
	${FIPDIR}/bl21.bin \
	${WORKDIR}/bl2_new.bin \
	bl2

gxlimg -t bl2 -c ${WORKDIR}/bl2_new.bin ${WORKDIR}/bl2.bin.enc

gxlimg -t bl3 -c ${WORKDIR}/bl30_new.bin ${WORKDIR}/bl30.bin.enc
gxlimg -t bl3 -c ${FIPDIR}/bl31.img ${WORKDIR}/bl31.img.enc
gxlimg -t bl3 -c ${UBOOT} ${WORKDIR}/u-boot.bin.enc

gxlimg -t fip --bl2 ${WORKDIR}/bl2.bin.enc --bl30 ${WORKDIR}/bl30.bin.enc \
	--bl31 ${WORKDIR}/bl31.img.enc --bl33 ${WORKDIR}/u-boot.bin.enc \
	${WORKDIR}/gxl-boot.bin

mv ${WORKDIR}/gxl-boot.bin ${OUTPUT}
exit 0
